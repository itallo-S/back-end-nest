{
  "env": {
    "es2021": true,
    "node": true
  },
  "extends": ["plugin:@typescript-eslint/recommended", "plugin:prettier/recommended"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": ["import", "@typescript-eslint", "prettier"],
  "rules": {
    "curly": ["error"],
    "brace-style": "error",
    "semi": [1, "always"],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/explicit-function-return-type": ["error", { "allowExpressions": true }],
    "@typescript-eslint/no-non-null-assertion": "off",
    "no-useless-escape": "error",
    "import/no-default-export": "error",
    "no-async-promise-executor": 0,
    "@typescript-eslint/no-use-before-define": "error",
    "no-prototype-builtins": "off",
    "@typescript/interface-name-prefix": "off",
    "prefer-spread": "off",
    "prefer-const": "error",
    "camelcase": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "memberLike",
        "format": ["camelCase"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      },
      {
        // For HTTP Headers
        "selector": "property",
        "format": null,
        "filter": "^(Authorization|Content-Type|grant_type|client_id|client_secret|token_type|access_token|expires_in|application_token)$"
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        },
        "multilineDetection": "brackets"
      }
    ],
    "no-constant-condition": "error",
    "no-extra-boolean-cast": "error",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "no-unexpected-multiline": "error",
    "comma-dangle": ["error", "only-multiline"],
    "@typescript-eslint/interface-name-prefix": "off",
    "keyword-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "arrow-spacing": "error",
    "key-spacing": ["error", { "afterColon": true }],
    "quotes": ["error", "single", { "allowTemplateLiterals": true }],
    "no-multi-spaces": "error",
    "indent": "off",
    "no-multiple-empty-lines": ["error", { "max": 1 }],
    "import/newline-after-import": "error",
    "padded-blocks": ["error", "never"],
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "no-trailing-spaces": "error",
    "@typescript-eslint/no-inferrable-types": "off",
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreTrailingComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "useTabs": false,
        "trailingComma": "all",
        "printWidth": 120,
        "arrowParens": "avoid"
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
